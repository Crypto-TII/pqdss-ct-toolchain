{
  "targets":{
    "crypto_sign": {
      "initialization": ["unsigned char *sm;", "unsigned long long smlen = 0;", "const unsigned char *m;", "unsigned long long mlen = 16;","const unsigned char sk[CRYPTO_SECRETKEYBYTES] = {0}"],
      "function call": "crypto_sign(sm, &smlen, m, mlen, sk)",
      "return type": "int",
      "secret arguments": ["sk"],
      "includes": ["api.h"],
      "random data": ["m", "sk"],
      "additional block": null,
      "allocate memory": [["sm","CRYPTO_BYTES + 16"], ["m", "16"]],
      "link libraries": ["-Lcandidates/mpc-in-the-head/mirith/Optimized_Implementation  -ltest", "-lcrypto"],
      "include directory": ["-Iexamples/perk/Optimized_Implementation/perk-128-fast-3/src", "-Iexamples"]
    },
    "crypto_sign_keypair": {
      "initialization": ["uint8_t sk[CRYPTO_SECRETKEYBYTES]", "uint8_t pk[CRYPTO_PUBLICKEYBYTES]"],
      "function call": "crypto_sign_keypair(pk, sk)",
      "return type": "int",
      "secret arguments": ["sk"],
      "includes": ["api.h"],
      "random data": ["pk", "sk"],
      "wrapper": "",
      "additional block": null,
      "allocate memory": null,
      "link libraries": ["-Lexamples/perk/Optimized_Implementation/perk-128-fast-3  -ltest", "-lcrypto"],
      "include directory": ["-Iexamples/perk/Optimized_Implementation/perk-128-fast-3/src", "-Iexamples"]
    },
    "compare_byte_arrays": {
      "initialization": ["uint8_t *array1", "uint8_t *array2", "int length = 32"],
      "function call": "compare_byte_arrays(array1, array2, length)",
      "return type": "uint8_t",
      "secret arguments": ["array1"],
      "includes": ["../../TestsDir/example.h"],
      "random data": ["array1", "array2"],
      "wrapper": "",
      "additional block": null,
      "allocate memory": [["array1","32"], ["array2","32"]],
      "link librarries": null
    },
    "conditional_subtraction": {
      "initialization": ["int16_t *c", "int16_t *input", "int16_t bound = 64"],
      "function call": "conditional_subtraction(c, input, bound)",
      "return type": null,
      "secret arguments": ["input", "c"],
      "includes": ["../../TestsDir/example2.h"],
      "random data": ["input"],
      "wrapper": "",
      "additional block": null,
      "allocate memory": [["input","1"]],
      "link libraries": null
    },
    "add": {
      "initialization": ["gf a", "gf b"],
      "function call": "add(a, b)",
      "return type": "uint8_t",
      "secret arguments": ["a"],
      "includes": ["gf.h"],
      "random data": ["a","b"],
      "additional block": null,
      "allocate memory": null,
      "include directory": ["-Iexamples"]
    },
    "conditional_assignment": {
      "initialization": ["uint8_t *dest;", "uint16_t dest_length;", "uint8_t *src", "uint8_t cond;"],
      "function call": "conditional_assignment(dest, dest_length, src, cond)",
      "return type": "uint8_t",
      "secret arguments": ["dest" ,"src"],
      "includes": ["comparison.h"],
      "random data": ["dest","src", "cond"],
      "additional block": null,
      "allocate memory": [["dest", "32"], ["src", "64"]],
      "include directory": ["-Iexamples"]
    }
  },
  "tools": ["binsec", "dudect", "ctgrind", "ctverif", "flowtracker"],
  "libraries": ["test"],
  "path_to_libraries": "examples/cmake-build"

}
