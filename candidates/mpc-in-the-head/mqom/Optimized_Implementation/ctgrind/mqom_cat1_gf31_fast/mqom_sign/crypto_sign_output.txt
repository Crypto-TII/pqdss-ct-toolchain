==2659== Memcheck, a memory error detector
==2659== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2659== Using Valgrind-3.16.1-36d6727e1d-20200622X and LibVEX; rerun with -h for copyright info
==2659== Command: ./mpc-in-the-head/mqom/Optimized_Implementation/ctgrind/mqom_cat1_gf31_fast/build/mqom_sign/taint_crypto_sign
==2659== Parent PID: 2622
==2659== 
--2659-- 
--2659-- Valgrind options:
--2659--    -s
--2659--    --track-origins=yes
--2659--    --leak-check=full
--2659--    --show-leak-kinds=all
--2659--    --verbose
--2659--    --log-file=mpc-in-the-head/mqom/Optimized_Implementation/ctgrind/mqom_cat1_gf31_fast/mqom_sign/crypto_sign_output.txt
--2659-- Contents of /proc/version:
--2659--   Linux version 6.3.13-linuxkit (root@buildkitsandbox) (gcc (Alpine 12.2.1_git20220924-r10) 12.2.1 20220924, GNU ld (GNU Binutils) 2.40) #1 SMP PREEMPT_DYNAMIC Thu Sep  7 07:54:49 UTC 2023
--2659-- 
--2659-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-sse3-ssse3-avx-avx2-bmi-f16c-rdrand
--2659-- Page sizes: currently 4096, max supported 4096
--2659-- Valgrind library directory: /usr/share/valgrind/lib/valgrind
--2659-- Reading syms from /home/nist_sig/mpc-in-the-head/mqom/Optimized_Implementation/ctgrind/mqom_cat1_gf31_fast/build/mqom_sign/taint_crypto_sign
--2659-- Warning: cross-CU LIMITATION: some inlined fn names
--2659-- might be shown as UnknownInlinedFun
--2659-- Reading syms from /usr/lib/x86_64-linux-gnu/ld-2.31.so
--2659--   Considering /usr/lib/debug/.build-id/c6/90288cb132a32066848b987fe4bfeb82e54291.debug ..
--2659--   .. build-id is valid
--2659-- Reading syms from /usr/share/valgrind/lib/valgrind/memcheck-amd64-linux
--2659--    object doesn't have a dynamic symbol table
--2659-- Scheduler: using generic scheduler lock implementation.
--2659-- Reading suppressions file: /usr/share/valgrind/lib/valgrind/default.supp
==2659== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-2659-by-???-on-736d99eea899
==2659== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-2659-by-???-on-736d99eea899
==2659== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-2659-by-???-on-736d99eea899
==2659== 
==2659== TO CONTROL THIS PROCESS USING vgdb (which you probably
==2659== don't want to do, unless you know exactly what you're doing,
==2659== or are doing some strange experiment):
==2659==   /usr/share/valgrind/lib/valgrind/../../bin/vgdb --pid=2659 ...command...
==2659== 
==2659== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==2659==   /path/to/gdb ./mpc-in-the-head/mqom/Optimized_Implementation/ctgrind/mqom_cat1_gf31_fast/build/mqom_sign/taint_crypto_sign
==2659== and then give GDB the following command
==2659==   target remote | /usr/share/valgrind/lib/valgrind/../../bin/vgdb --pid=2659
==2659== --pid is optional if only one valgrind process is running
==2659== 
--2659-- REDIR: 0x4022e20 (ld-linux-x86-64.so.2:strlen) redirected to 0x580ccaa2 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--2659-- REDIR: 0x4022bf0 (ld-linux-x86-64.so.2:index) redirected to 0x580ccabc (vgPlain_amd64_linux_REDIR_FOR_index)
--2659-- Reading syms from /usr/share/valgrind/lib/valgrind/vgpreload_core-amd64-linux.so
--2659-- Reading syms from /usr/share/valgrind/lib/valgrind/vgpreload_memcheck-amd64-linux.so
==2659== WARNING: new redirection conflicts with existing -- ignoring it
--2659--     old: 0x04022e20 (strlen              ) R-> (0000.0) 0x580ccaa2 vgPlain_amd64_linux_REDIR_FOR_strlen
--2659--     new: 0x04022e20 (strlen              ) R-> (2007.0) 0x0483ecf0 strlen
--2659-- REDIR: 0x401f600 (ld-linux-x86-64.so.2:strcmp) redirected to 0x483fc60 (strcmp)
--2659-- REDIR: 0x4023380 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4843780 (mempcpy)
--2659-- Reading syms from /usr/lib/x86_64-linux-gnu/libc-2.31.so
--2659--   Considering /usr/lib/debug/.build-id/e6/78fe54a5d2c2092f8e47eb0b33105e380f7340.debug ..
--2659--   .. build-id is valid
--2659-- Reading syms from /usr/lib/libctgrind.so
--2659-- Reading syms from /usr/lib/x86_64-linux-gnu/libcrypto.so.1.1
--2659--    object doesn't have a symbol table
--2659-- Reading syms from /usr/lib/x86_64-linux-gnu/libdl-2.31.so
--2659--   Considering /usr/lib/debug/.build-id/0e/6272b02b03de43552498edad759b3a54f74b3c.debug ..
--2659--   .. build-id is valid
--2659-- Reading syms from /usr/lib/x86_64-linux-gnu/libpthread-2.31.so
--2659--   Considering /usr/lib/debug/.build-id/f5/b7b9b3efe01ef7aec691dc8f4e272c518f8cdf.debug ..
--2659--   .. build-id is valid
--2659-- REDIR: 0x48f0480 (libc.so.6:memmove) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x48ef780 (libc.so.6:strncpy) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x48f07b0 (libc.so.6:strcasecmp) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x48ef0a0 (libc.so.6:strcat) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x48ef7e0 (libc.so.6:rindex) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x48f1c50 (libc.so.6:rawmemchr) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x490cce0 (libc.so.6:wmemchr) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x490c820 (libc.so.6:wcscmp) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x48f05e0 (libc.so.6:mempcpy) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x48f0410 (libc.so.6:bcmp) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x48ef710 (libc.so.6:strncmp) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x48ef150 (libc.so.6:strcmp) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x48f0540 (libc.so.6:memset) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x490c7e0 (libc.so.6:wcschr) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x48ef670 (libc.so.6:strnlen) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x48ef230 (libc.so.6:strcspn) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x48f0800 (libc.so.6:strncasecmp) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x48ef1d0 (libc.so.6:strcpy) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x48f0950 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x490df50 (libc.so.6:wcsnlen) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x490c860 (libc.so.6:wcscpy) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x48ef820 (libc.so.6:strpbrk) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x48ef100 (libc.so.6:index) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x48ef630 (libc.so.6:strlen) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x48f8bb0 (libc.so.6:memrchr) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x48f0850 (libc.so.6:strcasecmp_l) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x48f03d0 (libc.so.6:memchr) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x490c930 (libc.so.6:wcslen) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x48efae0 (libc.so.6:strspn) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x48f0750 (libc.so.6:stpncpy) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x48f06f0 (libc.so.6:stpcpy) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x48f1c90 (libc.so.6:strchrnul) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x48f08a0 (libc.so.6:strncasecmp_l) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x497d850 (libc.so.6:__memcpy_chk) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x48f02f0 (libc.so.6:strstr) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--2659-- REDIR: 0x49d8510 (libc.so.6:__strrchr_avx2) redirected to 0x483e6a0 (rindex)
--2659-- REDIR: 0x49d86e0 (libc.so.6:__strlen_avx2) redirected to 0x483ebd0 (strlen)
--2659-- REDIR: 0x48ebb10 (libc.so.6:calloc) redirected to 0x483da80 (calloc)
--2659-- REDIR: 0x48ea0e0 (libc.so.6:malloc) redirected to 0x483b789 (malloc)
--2659-- REDIR: 0x49dbb70 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4842640 (memset)
--2659-- REDIR: 0x48ea6d0 (libc.so.6:free) redirected to 0x483c98a (free)
==2659== Invalid write of size 8
==2659==    at 0x10937B: UnknownInlinedFun (string_fortified.h:34)
==2659==    by 0x10937B: UnknownInlinedFun (rng.c:175)
==2659==    by 0x10937B: UnknownInlinedFun (taint_crypto_sign.c:22)
==2659==    by 0x10937B: main (taint_crypto_sign.c:35)
==2659==  Address 0x4d4a040 is 0 bytes after a block of size 0 alloc'd
==2659==    at 0x483DB0A: calloc (vg_replace_malloc.c:760)
==2659==    by 0x109188: main (taint_crypto_sign.c:28)
==2659== 

valgrind: m_mallocfree.c:303 (get_bszB_as_is): Assertion 'bszB_lo == bszB_hi' failed.
valgrind: Heap block lo/hi size mismatch: lo = 64, hi = 1773841811996233223.
This is probably caused by your program erroneously writing past the
end of a heap block and corrupting heap metadata.  If you fix any
invalid writes reported by Memcheck, this assertion failure will
probably go away.  Please try that before reporting this as a bug.


host stacktrace:
==2659==    at 0x5804810A: show_sched_status_wrk (m_libcassert.c:406)
==2659==    by 0x58048237: report_and_quit (m_libcassert.c:477)
==2659==    by 0x580483DB: vgPlain_assert_fail (m_libcassert.c:543)
==2659==    by 0x58052B64: get_bszB_as_is (m_mallocfree.c:303)
==2659==    by 0x58052B64: is_inuse_block (m_mallocfree.c:331)
==2659==    by 0x58052B64: vgPlain_describe_arena_addr (m_mallocfree.c:1592)
==2659==    by 0x5803EF4A: vgPlain_describe_addr (m_addrinfo.c:185)
==2659==    by 0x5803DDFF: vgMemCheck_update_Error_extra (mc_errors.c:1185)
==2659==    by 0x58042FB4: vgPlain_maybe_record_error (m_errormgr.c:822)
==2659==    by 0x5803D238: vgMemCheck_record_address_error (mc_errors.c:765)
==2659==    by 0x1009B3EDC0: ???
==2659==    by 0x1008E8DF2F: ???
==2659==    by 0x1008E8DF17: ???
==2659==    by 0x1008E8DF2F: ???
==2659==    by 0x1008E8DF3F: ???

sched status:
  running_tid=1

Thread 1: status = VgTs_Runnable (lwpid 2659)
==2659==    at 0x10A043: UnknownInlinedFun (string_fortified.h:34)
==2659==    by 0x10A043: UnknownInlinedFun (rng.c:180)
==2659==    by 0x10A043: UnknownInlinedFun (taint_crypto_sign.c:22)
==2659==    by 0x10A043: main (taint_crypto_sign.c:35)
client stack range: [0x1FFEFFE000 0x1FFF000FFF] client SP: 0x1FFF0003C0
valgrind stack range: [0x1008D8E000 0x1008E8DFFF] top usage: 18696 of 1048576


Note: see also the FAQ in the source distribution.
It contains workarounds to several common problems.
In particular, if Valgrind aborted or crashed after
identifying problems in your program, there's a good chance
that fixing those problems will prevent Valgrind aborting or
crashing, especially if it happened in m_mallocfree.c.

If that doesn't help, please report this bug to: www.valgrind.org

In the bug report, send all the above text, the valgrind
version, and what OS and version you are using.  Thanks.

