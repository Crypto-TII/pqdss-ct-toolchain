==7336== Memcheck, a memory error detector
==7336== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==7336== Using Valgrind-3.16.1-36d6727e1d-20200622X and LibVEX; rerun with -h for copyright info
==7336== Command: ./multivariate/qr_uov/QR_UOV/Optimized_Implementation/ctgrind/qruov1q7L10v740m100/build/qr_uov_sign/taint_crypto_sign
==7336== Parent PID: 7319
==7336== 
--7336-- 
--7336-- Valgrind options:
--7336--    -s
--7336--    --track-origins=yes
--7336--    --leak-check=full
--7336--    --show-leak-kinds=all
--7336--    --verbose
--7336--    --log-file=multivariate/qr_uov/QR_UOV/Optimized_Implementation/ctgrind/qruov1q7L10v740m100/qr_uov_sign/crypto_sign_output.txt
--7336-- Contents of /proc/version:
--7336--   Linux version 6.3.13-linuxkit (root@buildkitsandbox) (gcc (Alpine 12.2.1_git20220924-r10) 12.2.1 20220924, GNU ld (GNU Binutils) 2.40) #1 SMP PREEMPT_DYNAMIC Thu Sep  7 07:54:49 UTC 2023
--7336-- 
--7336-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-sse3-ssse3-avx-avx2-bmi-f16c-rdrand
--7336-- Page sizes: currently 4096, max supported 4096
--7336-- Valgrind library directory: /usr/share/valgrind/lib/valgrind
--7336-- Reading syms from /home/nist_sig/multivariate/qr_uov/QR_UOV/Optimized_Implementation/ctgrind/qruov1q7L10v740m100/build/qr_uov_sign/taint_crypto_sign
--7336-- Reading syms from /usr/lib/x86_64-linux-gnu/ld-2.31.so
--7336--   Considering /usr/lib/debug/.build-id/c6/90288cb132a32066848b987fe4bfeb82e54291.debug ..
--7336--   .. build-id is valid
--7336-- Reading syms from /usr/share/valgrind/lib/valgrind/memcheck-amd64-linux
--7336--    object doesn't have a dynamic symbol table
--7336-- Scheduler: using generic scheduler lock implementation.
--7336-- Reading suppressions file: /usr/share/valgrind/lib/valgrind/default.supp
==7336== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-7336-by-???-on-736d99eea899
==7336== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-7336-by-???-on-736d99eea899
==7336== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-7336-by-???-on-736d99eea899
==7336== 
==7336== TO CONTROL THIS PROCESS USING vgdb (which you probably
==7336== don't want to do, unless you know exactly what you're doing,
==7336== or are doing some strange experiment):
==7336==   /usr/share/valgrind/lib/valgrind/../../bin/vgdb --pid=7336 ...command...
==7336== 
==7336== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==7336==   /path/to/gdb ./multivariate/qr_uov/QR_UOV/Optimized_Implementation/ctgrind/qruov1q7L10v740m100/build/qr_uov_sign/taint_crypto_sign
==7336== and then give GDB the following command
==7336==   target remote | /usr/share/valgrind/lib/valgrind/../../bin/vgdb --pid=7336
==7336== --pid is optional if only one valgrind process is running
==7336== 
--7336-- REDIR: 0x4022e20 (ld-linux-x86-64.so.2:strlen) redirected to 0x580ccaa2 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--7336-- REDIR: 0x4022bf0 (ld-linux-x86-64.so.2:index) redirected to 0x580ccabc (vgPlain_amd64_linux_REDIR_FOR_index)
--7336-- Reading syms from /usr/share/valgrind/lib/valgrind/vgpreload_core-amd64-linux.so
--7336-- Reading syms from /usr/share/valgrind/lib/valgrind/vgpreload_memcheck-amd64-linux.so
==7336== WARNING: new redirection conflicts with existing -- ignoring it
--7336--     old: 0x04022e20 (strlen              ) R-> (0000.0) 0x580ccaa2 vgPlain_amd64_linux_REDIR_FOR_strlen
--7336--     new: 0x04022e20 (strlen              ) R-> (2007.0) 0x0483ecf0 strlen
--7336-- REDIR: 0x401f600 (ld-linux-x86-64.so.2:strcmp) redirected to 0x483fc60 (strcmp)
--7336-- REDIR: 0x4023380 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4843780 (mempcpy)
--7336-- Reading syms from /usr/lib/x86_64-linux-gnu/libcrypto.so.1.1
--7336--    object doesn't have a symbol table
--7336-- Reading syms from /usr/lib/libctgrind.so
--7336-- Reading syms from /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0
--7336--    object doesn't have a symbol table
--7336-- Reading syms from /usr/lib/x86_64-linux-gnu/libc-2.31.so
--7336--   Considering /usr/lib/debug/.build-id/e6/78fe54a5d2c2092f8e47eb0b33105e380f7340.debug ..
--7336--   .. build-id is valid
--7336-- Reading syms from /usr/lib/x86_64-linux-gnu/libdl-2.31.so
--7336--   Considering /usr/lib/debug/.build-id/0e/6272b02b03de43552498edad759b3a54f74b3c.debug ..
--7336--   .. build-id is valid
--7336-- Reading syms from /usr/lib/x86_64-linux-gnu/libpthread-2.31.so
--7336--   Considering /usr/lib/debug/.build-id/f5/b7b9b3efe01ef7aec691dc8f4e272c518f8cdf.debug ..
--7336--   .. build-id is valid
--7336-- REDIR: 0x4c0d480 (libc.so.6:memmove) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c0c780 (libc.so.6:strncpy) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c0d7b0 (libc.so.6:strcasecmp) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c0c0a0 (libc.so.6:strcat) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c0c7e0 (libc.so.6:rindex) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c0ec50 (libc.so.6:rawmemchr) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c29ce0 (libc.so.6:wmemchr) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c29820 (libc.so.6:wcscmp) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c0d5e0 (libc.so.6:mempcpy) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c0d410 (libc.so.6:bcmp) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c0c710 (libc.so.6:strncmp) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c0c150 (libc.so.6:strcmp) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c0d540 (libc.so.6:memset) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c297e0 (libc.so.6:wcschr) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c0c670 (libc.so.6:strnlen) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c0c230 (libc.so.6:strcspn) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c0d800 (libc.so.6:strncasecmp) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c0c1d0 (libc.so.6:strcpy) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c0d950 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c2af50 (libc.so.6:wcsnlen) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c29860 (libc.so.6:wcscpy) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c0c820 (libc.so.6:strpbrk) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c0c100 (libc.so.6:index) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c0c630 (libc.so.6:strlen) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c15bb0 (libc.so.6:memrchr) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c0d850 (libc.so.6:strcasecmp_l) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c0d3d0 (libc.so.6:memchr) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c29930 (libc.so.6:wcslen) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c0cae0 (libc.so.6:strspn) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c0d750 (libc.so.6:stpncpy) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c0d6f0 (libc.so.6:stpcpy) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c0ec90 (libc.so.6:strchrnul) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c0d8a0 (libc.so.6:strncasecmp_l) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c9a850 (libc.so.6:__memcpy_chk) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4c0d2f0 (libc.so.6:strstr) redirected to 0x48311c1 (_vgnU_ifunc_wrapper)
--7336-- REDIR: 0x4cf5510 (libc.so.6:__strrchr_avx2) redirected to 0x483e6a0 (rindex)
--7336-- REDIR: 0x4cf56e0 (libc.so.6:__strlen_avx2) redirected to 0x483ebd0 (strlen)
--7336-- REDIR: 0x4c070e0 (libc.so.6:malloc) redirected to 0x483b789 (malloc)
--7336-- REDIR: 0x4c076d0 (libc.so.6:free) redirected to 0x483c98a (free)
--7336-- REDIR: 0x4cf8b70 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4842640 (memset)
--7336-- REDIR: 0x4c08b10 (libc.so.6:calloc) redirected to 0x483da80 (calloc)
==7336== Invalid write of size 8
==7336==    at 0x10DBC1: randombytes (in /home/nist_sig/multivariate/qr_uov/QR_UOV/Optimized_Implementation/ctgrind/qruov1q7L10v740m100/build/qr_uov_sign/taint_crypto_sign)
==7336==    by 0x10926C: generate_test_vectors (taint_crypto_sign.c:22)
==7336==    by 0x10926C: main (taint_crypto_sign.c:35)
==7336==  Address 0x4d95100 is 0 bytes after a block of size 0 alloc'd
==7336==    at 0x483DB0A: calloc (vg_replace_malloc.c:760)
==7336==    by 0x109222: main (taint_crypto_sign.c:28)
==7336== 

valgrind: m_mallocfree.c:303 (get_bszB_as_is): Assertion 'bszB_lo == bszB_hi' failed.
valgrind: Heap block lo/hi size mismatch: lo = 64, hi = 1773841811996233223.
This is probably caused by your program erroneously writing past the
end of a heap block and corrupting heap metadata.  If you fix any
invalid writes reported by Memcheck, this assertion failure will
probably go away.  Please try that before reporting this as a bug.


host stacktrace:
==7336==    at 0x5804810A: show_sched_status_wrk (m_libcassert.c:406)
==7336==    by 0x58048237: report_and_quit (m_libcassert.c:477)
==7336==    by 0x580483DB: vgPlain_assert_fail (m_libcassert.c:543)
==7336==    by 0x58052B64: get_bszB_as_is (m_mallocfree.c:303)
==7336==    by 0x58052B64: is_inuse_block (m_mallocfree.c:331)
==7336==    by 0x58052B64: vgPlain_describe_arena_addr (m_mallocfree.c:1592)
==7336==    by 0x5803EF4A: vgPlain_describe_addr (m_addrinfo.c:185)
==7336==    by 0x5803DDFF: vgMemCheck_update_Error_extra (mc_errors.c:1185)
==7336==    by 0x58042FB4: vgPlain_maybe_record_error (m_errormgr.c:822)
==7336==    by 0x5803D238: vgMemCheck_record_address_error (mc_errors.c:765)
==7336==    by 0x1009B592C3: ???
==7336==    by 0x1008DB1F2F: ???
==7336==    by 0x1008DB1F17: ???
==7336==    by 0x1008DB1F2F: ???
==7336==    by 0x1008DB1F3F: ???

sched status:
  running_tid=1

Thread 1: status = VgTs_Runnable (lwpid 7336)
==7336==    at 0x10DC09: randombytes (in /home/nist_sig/multivariate/qr_uov/QR_UOV/Optimized_Implementation/ctgrind/qruov1q7L10v740m100/build/qr_uov_sign/taint_crypto_sign)
==7336==    by 0x10926C: generate_test_vectors (taint_crypto_sign.c:22)
==7336==    by 0x10926C: main (taint_crypto_sign.c:35)
client stack range: [0x1FFEFFE000 0x1FFF000FFF] client SP: 0x1FFF000440
valgrind stack range: [0x1008CB2000 0x1008DB1FFF] top usage: 18696 of 1048576


Note: see also the FAQ in the source distribution.
It contains workarounds to several common problems.
In particular, if Valgrind aborted or crashed after
identifying problems in your program, there's a good chance
that fixing those problems will prevent Valgrind aborting or
crashing, especially if it happened in m_mallocfree.c.

If that doesn't help, please report this bug to: www.valgrind.org

In the bug report, send all the above text, the valgrind
version, and what OS and version you are using.  Thanks.

